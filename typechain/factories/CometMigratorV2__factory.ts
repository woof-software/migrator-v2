/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CometMigratorV2,
  CometMigratorV2Interface,
} from "../CometMigratorV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Comet",
        name: "comet_",
        type: "address",
      },
      {
        internalType: "contract IERC20NonStandard",
        name: "baseToken_",
        type: "address",
      },
      {
        internalType: "contract CTokenLike",
        name: "cETH_",
        type: "address",
      },
      {
        internalType: "contract IWETH9",
        name: "weth_",
        type: "address",
      },
      {
        internalType: "contract ILendingPool",
        name: "aaveV2LendingPool_",
        type: "address",
      },
      {
        internalType: "contract IUniswapV3Pool",
        name: "uniswapLiquidityPool_",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "swapRouter_",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "sweepee_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CTokenTransferFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "code",
        type: "uint256",
      },
    ],
    name: "CompoundV2Error",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
    ],
    name: "ERC20TransferFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
    ],
    name: "InvalidCallback",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
    ],
    name: "InvalidConfiguration",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
    ],
    name: "InvalidInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
    ],
    name: "Reentrancy",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
    ],
    name: "SweepFailure",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "contract CTokenLike",
                name: "cToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.CompoundV2Collateral[]",
            name: "collateral",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract CTokenLike",
                name: "cToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.CompoundV2Borrow[]",
            name: "borrows",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "path",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "amountInMaximum",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.Swap[]",
            name: "swaps",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct CometMigratorV2.CompoundV2Position",
        name: "compoundV2Position",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "contract ATokenLike",
                name: "aToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.AaveV2Collateral[]",
            name: "collateral",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract ADebtTokenLike",
                name: "aDebtToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.AaveV2Borrow[]",
            name: "borrows",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "path",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "amountInMaximum",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.Swap[]",
            name: "swaps",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct CometMigratorV2.AaveV2Position",
        name: "aaveV2Position",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flashAmountWithFee",
        type: "uint256",
      },
    ],
    name: "Migrated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sweeper",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sweep",
    type: "event",
  },
  {
    inputs: [],
    name: "aaveV2LendingPool",
    outputs: [
      {
        internalType: "contract ILendingPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "contract IERC20NonStandard",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cETH",
    outputs: [
      {
        internalType: "contract CTokenLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comet",
    outputs: [
      {
        internalType: "contract Comet",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inMigration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isUniswapLiquidityPoolToken0",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract CTokenLike",
                name: "cToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.CompoundV2Collateral[]",
            name: "collateral",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract CTokenLike",
                name: "cToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.CompoundV2Borrow[]",
            name: "borrows",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "path",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "amountInMaximum",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.Swap[]",
            name: "swaps",
            type: "tuple[]",
          },
        ],
        internalType: "struct CometMigratorV2.CompoundV2Position",
        name: "compoundV2Position",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "contract ATokenLike",
                name: "aToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.AaveV2Collateral[]",
            name: "collateral",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "contract ADebtTokenLike",
                name: "aDebtToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.AaveV2Borrow[]",
            name: "borrows",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "path",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "amountInMaximum",
                type: "uint256",
              },
            ],
            internalType: "struct CometMigratorV2.Swap[]",
            name: "swaps",
            type: "tuple[]",
          },
        ],
        internalType: "struct CometMigratorV2.AaveV2Position",
        name: "aaveV2Position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "flashAmount",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20NonStandard",
        name: "token",
        type: "address",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sweepee",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapLiquidityPool",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3FlashCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101a0604052348015610010575f5ffd5b50604051612afa380380612afa83398101604081905261002f9161020b565b6001600160a01b0380891660805287811661010081905287821661012052868216610140528582166101605290841660a081905260408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa15801561009c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100c091906102b6565b6001600160a01b03161460c08190528015906101525750610100516001600160a01b031660a0516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610122573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061014691906102b6565b6001600160a01b031614155b15610176576040516332afc78f60e01b81525f600482015260240160405180910390fd5b6001600160a01b0382811660e0819052828216610180526101005160405163095ea7b360e01b815260048101929092525f1960248301529091169063095ea7b3906044015f604051808303815f87803b1580156101d1575f5ffd5b505af11580156101e3573d5f5f3e3d5ffd5b5050505050505050505050506102d8565b6001600160a01b0381168114610208575f5ffd5b50565b5f5f5f5f5f5f5f5f610100898b031215610223575f5ffd5b885161022e816101f4565b60208a015190985061023f816101f4565b60408a0151909750610250816101f4565b60608a0151909650610261816101f4565b60808a0151909550610272816101f4565b60a08a0151909450610283816101f4565b60c08a0151909350610294816101f4565b60e08a01519092506102a5816101f4565b809150509295985092959890939650565b5f602082840312156102c6575f5ffd5b81516102d1816101f4565b9392505050565b60805160a05160c05160e05161010051610120516101405161016051610180516126fa6104005f395f818161014f0152818161038b015281816103eb015281816104b8015261050901525f8181610305015281816116e00152818161177d01526119b101525f818160ff01528181610d3901528181611212015261128201525f81816101e401528181610cf901526111d601525f818161029f0152818161086d0152818161091e01526109b801525f818161026c01528181610bf0015261150201525f81816101a1015281816106b4015281816106e101526107f801525f81816102d201528181610684015281816107a601526109d901525f8181610239015281816108f401528181611326015281816113a101528181611a350152611ab001526126fa5ff3fe6080604052600436106100c2575f3560e01c8063b9ea04c71161007c578063c55dae6311610057578063c55dae631461028e578063df5089dc146102c1578063e822eb32146102f4578063e9cbafb014610327575f5ffd5b8063b9ea04c714610206578063ba3e9c1214610228578063c31c9c071461025b575f5ffd5b806301681a62146100cd5780633fc8cef3146100ee57806362e1097d1461013e578063853058c3146101715780639df50c6f14610190578063a1b4d011146101d3575f5ffd5b366100c957005b5f5ffd5b3480156100d8575f5ffd5b506100ec6100e7366004611b3b565b610346565b005b3480156100f9575f5ffd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610149575f5ffd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b34801561017c575f5ffd5b506100ec61018b366004611b73565b61056f565b34801561019b575f5ffd5b506101c37f000000000000000000000000000000000000000000000000000000000000000081565b6040519015158152602001610135565b3480156101de575f5ffd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b348015610211575f5ffd5b5061021a5f5481565b604051908152602001610135565b348015610233575f5ffd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b348015610266575f5ffd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b348015610299575f5ffd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b3480156102cc575f5ffd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ff575f5ffd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b348015610332575f5ffd5b506100ec610341366004611bdf565b610776565b5f541561036e5760405163378db88b60e01b8152600260048201526024015b60405180910390fd5b6001600160a01b0381166104485760405147906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083905f818181858888f193505050506103e157604051636974857f60e11b81525f6004820152602401610365565b6040518181525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169033907ffe6f9ffae65cf2c41cdbb3faf5a94e71eab2c2c62215df2efd79e12e451d0b62906020015b60405180910390a45050565b6040516370a0823160e01b81523060048201525f906001600160a01b038316906370a0823190602401602060405180830381865afa15801561048c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104b09190611c59565b90506104dd827f000000000000000000000000000000000000000000000000000000000000000083610a7c565b6104fd57604051636974857f60e11b815260016004820152602401610365565b816001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316336001600160a01b03167ffe6f9ffae65cf2c41cdbb3faf5a94e71eab2c2c62215df2efd79e12e451d0b628460405161043c91815260200190565b50565b5f54156105915760405163378db88b60e01b81525f6004820152602401610365565b60015f5f8282546105a29190611c84565b909155503390506105b66040850185611c9d565b90506105c56020860186611ce9565b9050146105e757604051631615eca160e21b81525f6004820152602401610365565b6105f46040840184611c9d565b90506106036020850185611ce9565b90501461062657604051631615eca160e21b815260016004820152602401610365565b5f6040518060800160405280836001600160a01b03168152602001848152602001866106519061206c565b815260200161065f866121e7565b9052604051610671919060200161243f565b60405160208183030381529060405290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663490e6cbc307f00000000000000000000000000000000000000000000000000000000000000006106dd575f6106df565b855b7f000000000000000000000000000000000000000000000000000000000000000061070a578661070c565b5f5b856040518563ffffffff1660e01b815260040161072c9493929190612493565b5f604051808303815f87803b158015610743575f5ffd5b505af1158015610755573d5f5f3e3d5ffd5b5050505060015f5f82825461076a91906124c9565b90915550505050505050565b5f5460011461079b5760405163378db88b60e01b815260016004820152602401610365565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107e6576040516325dc2e6760e01b81525f6004820152602401610365565b5f6107f3828401846124dc565b90505f7f00000000000000000000000000000000000000000000000000000000000000006108215784610823565b855b82602001516108329190611c84565b9050610845825f01518360400151610b0d565b610856825f01518360600151611420565b6040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156108ba573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108de9190611c59565b9050818110156109b35782516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632644131890307f000000000000000000000000000000000000000000000000000000000000000061094786886124c9565b6040516001600160e01b031960e087901b1681526001600160a01b03948516600482015292841660248401529216604482015260648101919091526084015f604051808303815f87803b15801561099c575f5ffd5b505af11580156109ae573d5f5f3e3d5ffd5b505050505b6109fe7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610a7c565b610a1d5760405163032e8ffd60e01b81525f6004820152602401610365565b825f01516001600160a01b03167fbb8de142bb152399837bcf93d4e2a07f28b940eeb90ba1349bb918fd6752777484604001518560600151866020015186604051610a6b949392919061258d565b60405180910390a250505050505050565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390525f919085169063a9059cbb906044015f604051808303815f87803b158015610ac6575f5ffd5b505af1158015610ad8573d5f5f3e3d5ffd5b505050505f3d5f8114610af15760208114610afa575f5ffd5b5f199150610b04565b60205f5f3e5f5191505b50949350505050565b5f5b816020015151811015610f67575f82602001518281518110610b3357610b336125c5565b602002602001015190505f5f19826020015103610bbd5781516040516305eff7ef60e21b81526001600160a01b038781166004830152909116906317bfdfbc906024016020604051808303815f875af1158015610b92573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb69190611c59565b9050610bc4565b5060208101515b5f84604001518481518110610bdb57610bdb6125c5565b60200260200101515f0151511115610ced575f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f28c04986040518060a0016040528088604001518881518110610c3e57610c3e6125c5565b60200260200101515f01518152602001306001600160a01b0316815260200142815260200185815260200188604001518881518110610c7f57610c7f6125c5565b6020026020010151602001518152506040518263ffffffff1660e01b8152600401610caa91906125d9565b6020604051808303815f875af1158015610cc6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cea9190611c59565b50505b81516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911603610df7578151604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024015f604051808303815f87803b158015610d82575f5ffd5b505af1158015610d94573d5f5f3e3d5ffd5b505060405163e597461960e01b81526001600160a01b0389811660048301528416925063e5974619915084906024015f604051808303818588803b158015610dda575f5ffd5b505af1158015610dec573d5f5f3e3d5ffd5b505050505050610f5d565b5f825f01519050806001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610e3b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e5f9190612630565b835160405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044015f604051808303815f87803b158015610ea8575f5ffd5b505af1158015610eba573d5f5f3e3d5ffd5b50506040516304c11f0360e31b81526001600160a01b038981166004830152602482018690525f935084169150632608f818906044016020604051808303815f875af1158015610f0c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f309190611c59565b90508015610f5a57604051630eacb3ff60e31b81525f600482015260248101829052604401610365565b50505b5050600101610b0f565b505f5b81515181101561141b575f825f01518281518110610f8a57610f8a6125c5565b602002602001015190505f5f19826020015114610fab578160200151611017565b81516040516370a0823160e01b81526001600160a01b038781166004830152909116906370a08231906024016020604051808303815f875af1158015610ff3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110179190611c59565b90505f825f01516001600160a01b03166323b872dd8730856040518463ffffffff1660e01b815260040161104d9392919061264b565b6020604051808303815f875af1158015611069573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061108d919061266f565b9050806110ad5760405163ec5b1ccd60e01b815260040160405180910390fd5b825160405163db006a7560e01b8152600481018490525f916001600160a01b03169063db006a75906024016020604051808303815f875af11580156110f4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111189190611c59565b9050801561114f5761112b856001611c84565b604051630eacb3ff60e31b8152600481019190915260248101829052604401610365565b5f670de0b6b3a764000084865f01516001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611199573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111bd9190611c59565b6111c7919061268e565b6111d191906126a5565b90505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316865f01516001600160a01b0316036112a8577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004015f604051808303818588803b158015611269575f5ffd5b505af115801561127b573d5f5f3e3d5ffd5b50505050507f0000000000000000000000000000000000000000000000000000000000000000905061130f565b855f01516001600160a01b0316636f307dc36040518163ffffffff1660e01b81526004016020604051808303815f875af11580156112e8573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061130c9190612630565b90505b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820184905282169063095ea7b3906044015f604051808303815f87803b158015611376575f5ffd5b505af1158015611388573d5f5f3e3d5ffd5b5050604051634232cd6360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250634232cd6391506113dc908c908590879060040161264b565b5f604051808303815f87803b1580156113f3575f5ffd5b505af1158015611405573d5f5f3e3d5ffd5b505060019098019750610f6a9650505050505050565b505050565b5f5b8160200151518110156117fa575f82602001518281518110611446576114466125c5565b602002602001015190505f5f198260200151036114cf5781516040516370a0823160e01b81526001600160a01b038781166004830152909116906370a0823190602401602060405180830381865afa1580156114a4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114c89190611c59565b90506114d6565b5060208101515b5f846040015184815181106114ed576114ed6125c5565b60200260200101515f01515111156115ff575f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f28c04986040518060a0016040528088604001518881518110611550576115506125c5565b60200260200101515f01518152602001306001600160a01b0316815260200142815260200185815260200188604001518881518110611591576115916125c5565b6020026020010151602001518152506040518263ffffffff1660e01b81526004016115bc91906125d9565b6020604051808303815f875af11580156115d8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115fc9190611c59565b50505b5f825f01516001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561163f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116639190612630565b90505f835f01516001600160a01b031663b9a7b6226040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116a5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116c99190611c59565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018690529192509083169063095ea7b3906044015f604051808303815f87803b158015611734575f5ffd5b505af1158015611746573d5f5f3e3d5ffd5b505060405163573ade8160e01b81526001600160a01b03858116600483015260248201879052604482018590528a811660648301527f000000000000000000000000000000000000000000000000000000000000000016925063573ade8191506084016020604051808303815f875af11580156117c5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117e99190611c59565b505060019093019250611422915050565b505f5b81515181101561141b575f825f0151828151811061181d5761181d6125c5565b602002602001015190505f5f1982602001511461183e5781602001516118a9565b81516040516370a0823160e01b81526001600160a01b038781166004830152909116906370a0823190602401602060405180830381865afa158015611885573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118a99190611c59565b82516040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906118dd9088903090869060040161264b565b6020604051808303815f875af11580156118f9573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061191d919061266f565b505f825f01516001600160a01b031663b16a19de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561195e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119829190612630565b604051631a4ca37b60e21b81526001600160a01b038083166004830152602482018590523060448301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906369328dec906064016020604051808303815f875af11580156119f9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a1d9190611c59565b5060405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820184905282169063095ea7b3906044015f604051808303815f87803b158015611a85575f5ffd5b505af1158015611a97573d5f5f3e3d5ffd5b5050604051634232cd6360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250634232cd639150611aeb9089908590879060040161264b565b5f604051808303815f87803b158015611b02575f5ffd5b505af1158015611b14573d5f5f3e3d5ffd5b5050600190950194506117fd9350505050565b6001600160a01b038116811461056c575f5ffd5b5f60208284031215611b4b575f5ffd5b8135611b5681611b27565b9392505050565b5f60608284031215611b6d575f5ffd5b50919050565b5f5f5f60608486031215611b85575f5ffd5b83356001600160401b03811115611b9a575f5ffd5b611ba686828701611b5d565b93505060208401356001600160401b03811115611bc1575f5ffd5b611bcd86828701611b5d565b93969395505050506040919091013590565b5f5f5f5f60608587031215611bf2575f5ffd5b843593506020850135925060408501356001600160401b03811115611c15575f5ffd5b8501601f81018713611c25575f5ffd5b80356001600160401b03811115611c3a575f5ffd5b876020828401011115611c4b575f5ffd5b949793965060200194505050565b5f60208284031215611c69575f5ffd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115611c9757611c97611c70565b92915050565b5f5f8335601e19843603018112611cb2575f5ffd5b8301803591506001600160401b03821115611ccb575f5ffd5b6020019150600581901b3603821315611ce2575f5ffd5b9250929050565b5f5f8335601e19843603018112611cfe575f5ffd5b8301803591506001600160401b03821115611d17575f5ffd5b6020019150600681901b3603821315611ce2575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b0381118282101715611d6457611d64611d2e565b60405290565b604051606081016001600160401b0381118282101715611d6457611d64611d2e565b604051608081016001600160401b0381118282101715611d6457611d64611d2e565b604051601f8201601f191681016001600160401b0381118282101715611dd657611dd6611d2e565b604052919050565b5f6001600160401b03821115611df657611df6611d2e565b5060051b60200190565b5f611e12611e0d84611dde565b611dae565b838152905060208101600684901b830185811115611e2e575f5ffd5b835b81811015611e79575f60408289031215611e48575f5ffd5b611e50611d42565b90508135611e5d81611b27565b8152602082810135818301529084529290920191604001611e30565b5050509392505050565b5f82601f830112611e92575f5ffd5b611b5683833560208501611e00565b5f82601f830112611eb0575f5ffd5b8135611ebe611e0d82611dde565b8082825260208201915060208360051b860101925085831115611edf575f5ffd5b602085015b83811015611fb75780356001600160401b03811115611f01575f5ffd5b86016040818903601f19011215611f16575f5ffd5b611f1e611d42565b60208201356001600160401b03811115611f36575f5ffd5b82016020810190603f018a13611f4a575f5ffd5b80356001600160401b03811115611f6357611f63611d2e565b611f76601f8201601f1916602001611dae565b8181528b6020838501011115611f8a575f5ffd5b816020840160208301375f6020928201830152835260409390930135828401525084529283019201611ee4565b5095945050505050565b5f60608284031215611fd1575f5ffd5b611fd9611d6a565b905081356001600160401b03811115611ff0575f5ffd5b8201601f81018413612000575f5ffd5b61200f84823560208401611e00565b82525060208201356001600160401b0381111561202a575f5ffd5b61203684828501611e83565b60208301525060408201356001600160401b03811115612054575f5ffd5b61206084828501611ea1565b60408301525092915050565b5f611c973683611fc1565b5f82601f830112612086575f5ffd5b8135612094611e0d82611dde565b8082825260208201915060208360061b8601019250858311156120b5575f5ffd5b602085015b83811015611fb757604081880312156120d1575f5ffd5b6120d9611d42565b81356120e481611b27565b81526020828101358183015290845292909201916040016120ba565b5f60608284031215612110575f5ffd5b612118611d6a565b905081356001600160401b0381111561212f575f5ffd5b8201601f8101841361213f575f5ffd5b803561214d611e0d82611dde565b8082825260208201915060208360061b85010192508683111561216e575f5ffd5b6020840193505b828410156121be576040848803121561218c575f5ffd5b612194611d42565b843561219f81611b27565b8152602085810135818301529083526040909401939190910190612175565b845250505060208201356001600160401b038111156121db575f5ffd5b61203684828501612077565b5f611c973683612100565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b5f82825180855260208501945060208160051b830101602085015f5b8381101561228157601f19858403018852815180516040855261226260408601826121f2565b602092830151958301959095525097880197919091019060010161223c565b50909695505050505050565b8051606080845281519084018190525f9160200190829060808601905b808310156122e7576122d082855180516001600160a01b03168252602090810151910152565b6040820191506020840193506001830192506122aa565b506020858101518783038883015280518084529082019450910191505f905b808210156123435761232c83855180516001600160a01b03168252602090810151910152565b604083019250602084019350600182019150612306565b505060408401519150848103604086015261235e8183612220565b95945050505050565b5f8151808452602084019350602083015f5b828110156123ac57815180516001600160a01b031687526020908101518188015260409096019590910190600101612379565b5093949350505050565b8051606080845281519084018190525f9160200190829060808601905b8083101561240a57835180516001600160a01b031683526020908101518184015290930192600192909201916040909101906123d3565b506020850151925085810360208701526124248184612367565b925050506040830151848203604086015261235e8282612220565b6020815260018060a01b038251166020820152602082015160408201525f60408301516080606084015261247660a084018261228d565b90506060840151601f1984830301608085015261235e82826123b6565b60018060a01b0385168152836020820152826040820152608060608201525f6124bf60808301846121f2565b9695505050505050565b81810381811115611c9757611c97611c70565b5f602082840312156124ec575f5ffd5b81356001600160401b03811115612501575f5ffd5b820160808185031215612512575f5ffd5b61251a611d8c565b813561252581611b27565b81526020828101359082015260408201356001600160401b03811115612549575f5ffd5b61255586828501611fc1565b60408301525060608201356001600160401b03811115612573575f5ffd5b61257f86828501612100565b606083015250949350505050565b608081525f61259f608083018761228d565b82810360208401526125b181876123b6565b604084019590955250506060015292915050565b634e487b7160e01b5f52603260045260245ffd5b602081525f825160a060208401526125f460c08401826121f2565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b5f60208284031215612640575f5ffd5b8151611b5681611b27565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f6020828403121561267f575f5ffd5b81518015158114611b56575f5ffd5b8082028115828204841417611c9757611c97611c70565b5f826126bf57634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212204e54926b21abfb85f0977ee7f631b9a77c6e9df16eca1c4969b72535e43233a264736f6c634300081c0033";

type CometMigratorV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CometMigratorV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CometMigratorV2__factory extends ContractFactory {
  constructor(...args: CometMigratorV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    comet_: PromiseOrValue<string>,
    baseToken_: PromiseOrValue<string>,
    cETH_: PromiseOrValue<string>,
    weth_: PromiseOrValue<string>,
    aaveV2LendingPool_: PromiseOrValue<string>,
    uniswapLiquidityPool_: PromiseOrValue<string>,
    swapRouter_: PromiseOrValue<string>,
    sweepee_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CometMigratorV2> {
    return super.deploy(
      comet_,
      baseToken_,
      cETH_,
      weth_,
      aaveV2LendingPool_,
      uniswapLiquidityPool_,
      swapRouter_,
      sweepee_,
      overrides || {}
    ) as Promise<CometMigratorV2>;
  }
  override getDeployTransaction(
    comet_: PromiseOrValue<string>,
    baseToken_: PromiseOrValue<string>,
    cETH_: PromiseOrValue<string>,
    weth_: PromiseOrValue<string>,
    aaveV2LendingPool_: PromiseOrValue<string>,
    uniswapLiquidityPool_: PromiseOrValue<string>,
    swapRouter_: PromiseOrValue<string>,
    sweepee_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      comet_,
      baseToken_,
      cETH_,
      weth_,
      aaveV2LendingPool_,
      uniswapLiquidityPool_,
      swapRouter_,
      sweepee_,
      overrides || {}
    );
  }
  override attach(address: string): CometMigratorV2 {
    return super.attach(address) as CometMigratorV2;
  }
  override connect(signer: Signer): CometMigratorV2__factory {
    return super.connect(signer) as CometMigratorV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CometMigratorV2Interface {
    return new utils.Interface(_abi) as CometMigratorV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CometMigratorV2 {
    return new Contract(address, _abi, signerOrProvider) as CometMigratorV2;
  }
}
